From 6f1d949f94a5bb77fca2a782ee3dcbb4eb260a0c Mon Sep 17 00:00:00 2001
From: Kratika Dua <kratikavarshney2011@gmail.com>
Date: Mon, 1 Jul 2024 22:50:50 +0530
Subject: [PATCH] Changes done as per requirement

---
 src/DataManipulator.ts | 32 +++++++++++++++++++++++++-------
 src/Graph.tsx          | 30 +++++++++++++++++-------------
 2 files changed, 42 insertions(+), 20 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..3bfb414 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,38 @@
 import { ServerRespond } from './DataStreamer';
 
-export interface Row {
+/*export interface Row {
   stock: string,
   top_ask_price: number,
   timestamp: Date,
+}*/
+
+export interface Row {
+  price_abc: number,
+  price_def: number,
+  ratio: number,
+  timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
+  static generateRow(serverRespond: ServerRespond[]): Row {
+    const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price) / 2;
+    const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
       return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+        price_abc: priceABC,
+        price_def: priceDEF,
+        ratio,
+        timestamp: serverRespond[0].timestamp > serverRespond[1].timestamp ? serverRespond[0].timestamp : serverRespond[1].timestamp,
+        upper_bound: upperBound,
+        lower_bound: lowerBound,
+        trigger_alert: (ratio > upperBound || ratio < lowerBound ) ? ratio : undefined,        
       };
-    })
+    
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..13eadef 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      ratio: 'float',
       timestamp: 'date',
+      upper_bound: "float",
+      lower_bound: "float",
+      trigger_alert: "float",
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,23 +39,24 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      elem.setAttribute('columns', '["ratio","upper_bound","lower_bound","trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio: 'avg',       
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
-        DataManipulator.generateRow(this.props.data),
-      );
+      this.table.update([
+          DataManipulator.generateRow(this.props.data)
+        ] as unknown as TableData);
     }
   }
 }
-- 
2.45.0.windows.1

